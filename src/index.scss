$baseFontSize:   24px !default;
$baseLineHeight: 36px !default;
$baseFontFamily: 'Comic Sans MS', 'Comic Sans', Arial, sans-serif;
$darkTextColour: #151515;
$lightTextColour: #fff;
$backgroundColour: #f6f0e7;
$altBackgroundColour: #ede2d0;
$primaryHue: #51b0a6;
$secondaryHue: #fdc967;
$tertiaryHue: #f48f5a;

@import 'css/_normalize';

/* ELEMENTS */
*,
input[type="search"] {
  box-sizing: border-box;
}

html{
    font: 400 1.5em/1.5 $baseFontFamily;
}

body {
  color: $darkTextColour;
  background: $backgroundColour;
}

h1,h2,h3,h4,h5,h6,hgroup,
ul,ol,dd,
p,figure,
pre,table,fieldset,hr{
    margin-bottom: $baseLineHeight;
    margin-bottom: 1.5rem;
}

/* OBJECTS */
.grid-container {
  display: grid;
  grid-gap: $baseFontSize;
  grid-template-areas:
    "col-1"
    "col-2"
    "col-3";
}

@media only screen and (min-width: 800px)  {
  .grid-container {
    grid-template-columns: minmax(100px, 1fr) minmax(100px, 1.5fr) minmax(100px, 2fr);
    grid-template-areas:
      "col-1 col-2 col3";
    }
}

/* COMPONENTS */
.button {
  font-weight: 700;
  padding: $baseFontSize / 4 $baseFontSize / 2;
  background-color: $primaryHue;
  border: 1px solid $primaryHue;
  border-radius: $baseFontSize / 4;
  color: $lightTextColour;
}

// https://medium.com/claritydesignsystem/pure-css-accessible-checkboxes-and-radios-buttons-54063e759bb3
.checkbox {
  input[type='checkbox'] {
    opacity: 0;
    position: absolute;
    top: 3px;
    height: $baseFontSize;
    width: $baseFontSize;
  }
  label {
    position: relative;
    padding-left: 1.5rem;
  }
  label::before {
    position: absolute;
    left: 0;
    top: 2px;
    content: '';
    display: inline-block;
    height: 1rem;
    width: 1rem;
    border: 4px solid $primaryHue;
    border-radius: 4px;
  }

  label::after {
    position: absolute;
    left: 4px;
    top: 9px;
    content: '';
    display: inline-block;
    height: 8px;
    width: 18px;
    border-left: 6px solid;
    border-bottom: 6px solid;
    color: $backgroundColour;

    transform: rotate(-45deg);
  }
  /*Hide the checkmark by default*/
  input[type='checkbox'] + label::after {
    content: none;
  }

  input[type='checkbox']:checked + label::before {
    background-color: $primaryHue;
  }
  /*Unhide the checkmark on the checked state*/
  input[type='checkbox']:checked + label::after {
      content: '';
  }
  /*Adding focus styles on the outer-box of the fake checkbox*/
  input[type='checkbox']:focus + label::before {
      outline: rgb(59, 153, 252) auto 5px;
  }
}

.text-input {
  width: auto;
  max-width:4rem;
  padding: 4px;
  border: 4px solid $primaryHue;
  border-radius: 4px;
}

@import 'components/Game';
/* TRUMPS */
